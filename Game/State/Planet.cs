using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using OWML.Utils;
using PacificEngine.OW_CommonResources.Game.Display;
using PacificEngine.OW_CommonResources.Game.Player;
using PacificEngine.OW_CommonResources.Game.Resource;
using PacificEngine.OW_CommonResources.Geometry;
using PacificEngine.OW_CommonResources.Geometry.Orbits;
using UnityEngine;

namespace PacificEngine.OW_CommonResources.Game.State
{

    /**
     * SharedStone_Body (OWRigidbody): (SharedStone_Body (OWRigidbody), (ProbeCannon, Relative: (((1.000001,1.000001,1), (1.000001,1.000001,1)), ((9.358398,-24.49252,54.36719), (0,0,0), (0,0,0), (0,0,0)), ((-0.194,-0.443,-0.862,0.15), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1), (1.000001,1.000001,1)), ((-54.70387,-25.50959,-0.0001431), (0,0,0), (0,0,0), (0,0,0)), ((0.093,0.015,-0.161,-0.982), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
TimberHearth_Body (OWRigidbody): (TimberHearth_Body (OWRigidbody), (TimberHearth, Relative: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
GiantsDeep_Body (OWRigidbody): (GiantsDeep_Body (OWRigidbody), (GiantsDeep, Relative: (((1,1,1), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.105,0,-0.995), (0,0,0), (0,0,0))), Surface: (((1,1,1), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.105,0,-0.995), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
MiningRig_Body (OWRigidbody): (MiningRig_Body (OWRigidbody), (TimberHearth, Relative: (((1,1.000001,1.000001), (1,1.000001,1.000001)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0.704,0.704,0.062,0.062), (0,0,0), (0,0,0))), Surface: (((1,1.000001,1.000001), (1,1.000001,1.000001)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0.704,0.704,0.062,0.062), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Elevator_Body (OWRigidbody): (Elevator_Body (OWRigidbody), (DreamWorld, Relative: (((1,1,1), (1,1,1)), ((-138.8682,-358.9731,776.0415), (0,0,0), (0,0,0), (0,0,0)), ((0,0.087,0,-0.996), (0,0,0), (0,0,0))), Surface: (((1,1,1), (1,1,1)), ((-2.000024,-358.9731,788.3659), (0,0,0), (0,0,0), (0,0,0)), ((0.841,-0.001,0.001,-0.541), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Skeleton_Body (4) (OWRigidbody): (Skeleton_Body (4) (OWRigidbody), (InnerDarkBramble_Vessel, Relative: (((1.000001,1.000001,1), (1.000001,1.000001,1)), ((-41.8161,-23.34961,-53.1488), (0,0,0), (0,0,0), (0,0,0)), ((-0.651,-0.345,-0.41,0.538), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1), (1.000001,1.000001,1)), ((50.41,-23.34961,45.08004), (0,0,0), (0,0,0), (0,0,0)), ((-0.694,0.464,0.306,-0.458), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Rock_DB_Iceshard1 (10) (OWRigidbody): (Rock_DB_Iceshard1 (10) (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((-101.8423,-545,-27.09631), (0,0,0), (0,0,0), (0,0,0)), ((-0.593,0.313,-0.228,-0.706), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((105.0003,-545,8.999919), (0,0,0), (0,0,0), (0,0,0)), ((0.739,-0.043,0.039,-0.672), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
NomaiRecorder_Body (OWRigidbody): (NomaiRecorder_Body (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((202.7781,427.5859,36.04565), (0,0,0), (0,0,0), (0,0,0)), ((0.088,-0.015,-0.482,0.872), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((-205.9566,427.5859,-0.2859754), (0,0,0), (0,0,0), (0,0,0)), ((0.056,-0.016,-0.278,0.959), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Skeleton_Body (OWRigidbody): (Skeleton_Body (OWRigidbody), (InnerDarkBramble_Vessel, Relative: (((1.000001,1,1), (1.000001,1,1)), ((-158.1333,16.73438,-13.67773), (0,0,0), (0,0,0), (0,0,0)), ((0.08,0.276,0.045,-0.957), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1), (1.000001,1,1)), ((158.106,16.73438,-13.98963), (0,0,0), (0,0,0), (0,0,0)), ((0.615,-0.372,0.36,-0.595), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Rock_DB_Iceshard1 (5) (OWRigidbody): (Rock_DB_Iceshard1 (5) (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((-149.1482,32,126.0151), (0,0,0), (0,0,0), (0,0,0)), ((-0.565,0.644,0.352,0.376), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((124.9999,32,-150), (0,0,0), (0,0,0), (0,0,0)), ((0.131,-0.042,-0.3,0.944), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
NomaiInterfaceOrb_Body (OWRigidbody): (NomaiInterfaceOrb_Body (OWRigidbody), (GiantsDeep, Relative: (((0.219519,0.2195189,0.2195189), (0.2195189,0.2195188,0.2195188)), ((-15.16016,-76.82271,-24.45508), (0,0,0), (0,0,0), (0,0,0)), ((-0.45,0.028,0.438,-0.778), (0,0,0), (0,0,0))), Surface: (((0.219519,0.2195189,0.2195189), (0.2195189,0.2195188,0.2195188)), ((-19.91337,-76.82271,-20.7687), (0,0,0), (0,0,0), (0,0,0)), ((0.866,0.321,-0.133,-0.359), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Lamp_Body (1) (OWRigidbody): (Lamp_Body (1) (OWRigidbody), (ProbeCannon, Relative: (((1.000023,1.000001,1.000024), (1.000023,1.000001,1.000024)), ((11.61816,-17.39644,52.80859), (0,0,0), (0,0,0), (0,0,0)), ((-0.458,0.838,0.018,0.295), (0,0,0), (0,0,0))), Surface: (((1.000023,1.000001,1.000024), (1.000023,1.000001,1.000024)), ((-50.90722,-24.34545,6.489871), (0,0,0), (0,0,0), (0,0,0)), ((0.88,-0.148,-0.075,0.445), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Ball_Body (OWRigidbody): (Ball_Body (OWRigidbody), (TimberHearth, Relative: (((0.5000011,0.5000006,0.5000017), (0.5000011,0.5000004,0.5000015)), ((98.97205,-0.7548395,-203.2666), (0,0,0), (0,0,0), (0,0,0)), ((-0.955,0.047,0.291,0.042), (0,0,0), (0,0,0))), Surface: (((0.5000011,0.5000006,0.5000017), (0.5000011,0.5000004,0.5000015)), ((-62.17152,-0.7548395,217.3648), (0,0,0), (0,0,0), (0,0,0)), ((-0.612,-0.352,0.353,0.613), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Rock_Body (2) (OWRigidbody): (Rock_Body (2) (OWRigidbody), (TimberHearth, Relative: (((1,1,0.9999644), (1,1,0.9999641)), ((-20.0542,-7.326337,-2.036133), (0,0,0), (0,0,0), (0,0,0)), ((0.353,-0.884,-0.294,0.092), (0,0,0), (0,0,0))), Surface: (((1,1,0.9999644), (1,1,0.9999641)), ((20.10309,-7.326337,-1.477177), (0,0,0), (0,0,0), (0,0,0)), ((-0.311,-0.207,0.514,0.773), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
DB_EscapePodDimension_Body (OWRigidbody): (DB_EscapePodDimension_Body (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (WhiteHoleStation, Relative: (((0.6980276,0.6980302,0.6980293), (0.6980274,0.6980298,0.6980287)), ((2.125,-0.5385424,-25.06689), (0,0,0), (0,0,0), (0,0,0)), ((-0.999,0,-0.042,0), (0,0,0), (0,0,0))), Surface: (((0.6980276,0.6980302,0.6980293), (0.6980274,0.6980298,0.6980287)), ((0.000745,-0.5385424,-25.1568), (0,0,0), (0,0,0), (0,0,0)), ((-0.699,0,0,0.715), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Rock_DB_Iceshard1 (7) (OWRigidbody): (Rock_DB_Iceshard1 (7) (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((-110.9263,-89.80078,382.0421), (0,0,0), (0,0,0), (0,0,0)), ((0.107,0.913,-0.259,-0.298), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((42.90009,-89.80078,-395.5), (0,0,0), (0,0,0), (0,0,0)), ((0.918,0.305,0.08,0.24), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (InnerDarkBramble_Vessel, Relative: (((1.061401,1.0614,1.061401), (1.061401,1.0614,1.0614)), ((-181.6663,14.28906,-11.92871), (0,0,0), (0,0,0), (0,0,0)), ((0.033,-0.681,0.115,-0.722), (0,0,0), (0,0,0))), Surface: (((1.061401,1.0614,1.061401), (1.061401,1.0614,1.0614)), ((180.9777,14.28906,-19.79854), (0,0,0), (0,0,0), (0,0,0)), ((-0.718,0,0,-0.696), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Jellyfish_Body (OWRigidbody): (Jellyfish_Body (OWRigidbody), (GiantsDeep, Relative: (((1.000001,1.000001,1), (1.000001,1,1)), ((67.81348,-199.4353,-104.8145), (0,0,0), (0,0,0), (0,0,0)), ((0.139,-0.208,0.951,-0.182), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1), (1.000001,1,1)), ((44.53943,-199.4353,-116.6232), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
DB_AnglerNestDimension_Body (OWRigidbody): (DB_AnglerNestDimension_Body (OWRigidbody), (InnerDarkBramble_Nest, Relative: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((0,0,0), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
NomaiInterfaceOrb_Body (OWRigidbody): (NomaiInterfaceOrb_Body (OWRigidbody), (BrittleHollow, Relative: (((0.8999999,0.8999996,0.9000001), (0.8999999,0.8999997,0.9)), ((-125.2852,0.5842743,-207.8114), (0,0,0), (0,0,0), (0,0,0)), ((0.366,0.392,-0.603,-0.591), (0,0,0), (0,0,0))), Surface: (((0.8999999,0.8999996,0.9000001), (0.8999999,0.8999997,0.9)), ((-226.4098,0.5842743,87.29574), (0,0,0), (0,0,0), (0,0,0)), ((0.052,0,0,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
NomaiInterfaceOrb_Body (OWRigidbody): (NomaiInterfaceOrb_Body (OWRigidbody), (EmberTwin, Relative: (((0.9,0.8999997,0.8999997), (0.9000002,0.9,0.8999999)), ((63.42383,-76.03513,61.21606), (0,0,0), (0,0,0), (0,0,0)), ((-0.843,-0.142,0.375,-0.358), (0,0,0), (0,0,0))), Surface: (((0.9,0.8999997,0.8999997), (0.9000002,0.9,0.8999999)), ((13.76688,-76.03513,-87.06585), (0,0,0), (0,0,0), (0,0,0)), ((-0.034,0,-0.002,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467421,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-18.9209,196.1681,-71.08557), (0,0,0), (0,0,0), (0,0,0)), ((0.13,-0.623,0.11,-0.763), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467421,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-73.29121,196.1681,6.289572), (0,0,0), (0,0,0), (0,0,0)), ((-0.047,0,0.007,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (EmberTwin, Relative: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((121.6235,45.44814,-34.73145), (0,0,0), (0,0,0), (0,0,0)), ((-0.521,-0.808,0.243,-0.128), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-98.21071,45.44814,-79.70706), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.001,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467423,0.1467422,0.1467445), (0.1467422,0.1467422,0.1467422)), ((-249.3135,10.34579,-19.26233), (0,0,0), (0,0,0), (0,0,0)), ((-0.557,0.612,-0.411,-0.382), (0,0,0), (0,0,0))), Surface: (((0.1467423,0.1467422,0.1467445), (0.1467422,0.1467422,0.1467422)), ((-62.26251,10.34579,242.181), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467421,0.1467422,0.1467421), (0.1467422,0.1467422,0.1467422)), ((-6.881836,-50.65372,116.225), (0,0,0), (0,0,0), (0,0,0)), ((-0.143,-0.534,-0.824,-0.127), (0,0,0), (0,0,0))), Surface: (((0.1467421,0.1467422,0.1467421), (0.1467422,0.1467422,0.1467422)), ((113.2642,-50.65372,26.95953), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.001,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467439), (0.1467422,0.1467422,0.1467422)), ((-153.0977,-3.30928,38.97876), (0,0,0), (0,0,0), (0,0,0)), ((-0.711,0.659,-0.069,-0.237), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467439), (0.1467422,0.1467422,0.1467422)), ((11.80147,-3.30928,157.5404), (0,0,0), (0,0,0), (0,0,0)), ((0,0,-0.001,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467423,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-201.1367,5.964722,-14.79651), (0,0,0), (0,0,0), (0,0,0)), ((-0.19,0.246,-0.67,-0.674), (0,0,0), (0,0,0))), Surface: (((0.1467423,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-49.49873,5.964722,195.5116), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-29.34375,-10.26715,-255.0333), (0,0,0), (0,0,0), (0,0,0)), ((0.597,0.32,-0.405,-0.614), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-256.2543,-10.26715,-15.3881), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467423), (0.1467422,0.1467422,0.1467422)), ((-25.00781,-22.25113,122.9302), (0,0,0), (0,0,0), (0,0,0)), ((-0.687,-0.169,-0.327,-0.626), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467423), (0.1467422,0.1467422,0.1467422)), ((116.72,-22.25113,45.97448), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.013,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467421,0.1467422,0.1467422), (0.1467421,0.1467422,0.1467422)), ((42.60547,120.2526,11.61877), (0,0,0), (0,0,0), (0,0,0)), ((-0.19,-0.978,-0.035,0.084), (0,0,0), (0,0,0))), Surface: (((0.1467421,0.1467422,0.1467422), (0.1467421,0.1467422,0.1467422)), ((18.84062,120.2526,-39.94062), (0,0,0), (0,0,0), (0,0,0)), ((-0.022,-0.001,-0.028,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((37.19824,-51.50386,192.1154), (0,0,0), (0,0,0), (0,0,0)), ((-0.593,0.214,0.545,-0.553), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((195.6561,-51.50386,-3.272648), (0,0,0), (0,0,0), (0,0,0)), ((0.071,-0.004,0.056,-0.996), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467423), (0.1467422,0.1467422,0.1467422)), ((-19.02832,241.8223,-85.89148), (0,0,0), (0,0,0), (0,0,0)), ((0.135,-0.622,0.115,-0.763), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467423), (0.1467422,0.1467422,0.1467422)), ((-87.89083,241.8223,3.824344), (0,0,0), (0,0,0), (0,0,0)), ((-0.039,0.001,0.016,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467423,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((-8.980469,-86.912,189.9695), (0,0,0), (0,0,0), (0,0,0)), ((-0.029,-0.539,-0.841,-0.045), (0,0,0), (0,0,0))), Surface: (((0.1467423,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((185.524,-86.912,41.83188), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((45.63379,127.6826,11.91748), (0,0,0), (0,0,0), (0,0,0)), ((-0.19,-0.978,-0.035,0.084), (0,0,0), (0,0,0))), Surface: (((0.1467422,0.1467422,0.1467422), (0.1467422,0.1467422,0.1467422)), ((19.66065,127.6826,-42.87106), (0,0,0), (0,0,0), (0,0,0)), ((-0.021,-0.001,-0.026,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (Stranger, Relative: (((1.000001,1.000001,1.000001), (1,1,1)), ((-116.7754,-39.21484,-261.9995), (0,0,0), (0,0,0), (0,0,0)), ((-0.318,-0.581,-0.72,-0.206), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1,1,1)), ((161.8999,-141.2177,194.0723), (0,0,0), (0,0,0), (0,0,0)), ((-0.968,0.001,0,-0.252), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (Stranger, Relative: (((1.000001,1.000001,1.000001), (1,1.000001,1.000001)), ((-223.1621,11.31836,136.3245), (0,0,0), (0,0,0), (0,0,0)), ((-0.851,-0.38,0.085,0.352), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1,1.000001,1.000001)), ((78.6501,-130.6598,-212.7345), (0,0,0), (0,0,0), (0,0,0)), ((-0.966,0.258,0.001,-0.005), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (Stranger, Relative: (((1.000001,1.000001,1.000001), (1.000001,1,1)), ((-19.85205,15.08984,-268.9265), (0,0,0), (0,0,0), (0,0,0)), ((0.093,0.641,0.757,0.083), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1.000001,1,1)), ((143.4486,-36.17509,225.9583), (0,0,0), (0,0,0), (0,0,0)), ((-0.998,-0.025,-0.002,-0.063), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (Stranger, Relative: (((1,1.000001,1.000001), (0.9999999,1,1)), ((-57.98633,0.984375,-241.571), (0,0,0), (0,0,0), (0,0,0)), ((0.716,-0.219,-0.308,0.587), (0,0,0), (0,0,0))), Surface: (((1,1.000001,1.000001), (0.9999999,1,1)), ((144.3948,-69.34558,189.8982), (0,0,0), (0,0,0), (0,0,0)), ((0.99,0.004,-0.001,-0.141), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.1500004,0.1500003,0.1500002), (0.1500002,0.1500002,0.1500002)), ((49.07324,-95.25098,46.76318), (0,0,0), (0,0,0), (0,0,0)), ((0.339,0.28,0.888,-0.133), (0,0,0), (0,0,0))), Surface: (((0.1500004,0.1500003,0.1500002), (0.1500002,0.1500002,0.1500002)), ((10.15892,-95.25098,-67.02071), (0,0,0), (0,0,0), (0,0,0)), ((0.006,0,0,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (AshTwin, Relative: (((0.1500002,0.15,0.1500003), (0.1500001,0.15,0.1500002)), ((79.70825,-0.0002823,61.13281), (0,0,0), (0,0,0), (0,0,0)), ((0.651,0.651,0.277,0.277), (0,0,0), (0,0,0))), Surface: (((0.1500002,0.15,0.1500003), (0.1500001,0.15,0.1500002)), ((-100.3575,-0.0002823,-4.358326), (0,0,0), (0,0,0), (0,0,0)), ((-0.075,0,0,0.997), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.1500003,0.1500002,0.1500002), (0.1500002,0.1500001,0.1500002)), ((-21.55786,-108.4537,27.44946), (0,0,0), (0,0,0), (0,0,0)), ((-0.59,-0.081,-0.795,-0.116), (0,0,0), (0,0,0))), Surface: (((0.1500003,0.1500002,0.1500002), (0.1500002,0.1500001,0.1500002)), ((34.85036,-108.4537,1.914811), (0,0,0), (0,0,0), (0,0,0)), ((-0.052,0,-0.004,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.1500002,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((-18.69141,-117.2213,41.87109), (0,0,0), (0,0,0), (0,0,0)), ((-0.795,0.116,0.59,-0.081), (0,0,0), (0,0,0))), Surface: (((0.1500002,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((45.01974,-117.2213,-8.705156), (0,0,0), (0,0,0), (0,0,0)), ((0.019,-0.001,0.043,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (AshTwin, Relative: (((0.1500002,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((58.03589,0.0002823,81.99023), (0,0,0), (0,0,0), (0,0,0)), ((-0.277,0.277,0.651,-0.651), (0,0,0), (0,0,0))), Surface: (((0.1500002,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((-94.56785,0.0002823,-33.87447), (0,0,0), (0,0,0), (0,0,0)), ((0.075,0,0,-0.997), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
DreamRaft_Body (OWRigidbody): (DreamRaft_Body (OWRigidbody), (DreamWorld, Relative: (((1,1,1), (0.9999999,1,0.9999999)), ((156.2837,0,-886.3269), (0,0,0), (0,0,0), (0,0,0)), ((0,-0.481,0,0.877), (0,0,0), (0,0,0))), Surface: (((1,1,1), (0.9999999,1,0.9999999)), ((7.96E-05,0,-900), (0,0,0), (0,0,0), (0,0,0)), ((0.647,-0.285,-0.285,0.647), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
BackRaft_Body (OWRigidbody): (BackRaft_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((153.8652,0,-313.6116), (0,0,0), (0,0,0), (0,0,0)), ((0,0.772,0,-0.636), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((97.0695,0,-335.5656), (0,0,0), (0,0,0), (0,0,0)), ((-0.561,0.43,0.43,-0.561), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
SealRaft_Body (OWRigidbody): (SealRaft_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((-114.7646,-296.73,610.9531), (0,0,0), (0,0,0), (0,0,0)), ((0,0.996,0,0.087), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((-6.930039,-296.73,621.6), (0,0,0), (0,0,0), (0,0,0)), ((0.846,0.004,0.003,0.533), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody), (EmberTwin, Relative: (((0.1500003,0.1500002,0.1500001), (0.1500002,0.1500001,0.1500001)), ((50.65674,-93.48798,48.60278), (0,0,0), (0,0,0), (0,0,0)), ((0.339,0.28,0.888,-0.133), (0,0,0), (0,0,0))), Surface: (((0.1500003,0.1500002,0.1500001), (0.1500002,0.1500001,0.1500001)), ((10.75758,-93.48798,-69.37298), (0,0,0), (0,0,0), (0,0,0)), ((-0.007,0,0,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody), (AshTwin, Relative: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((81.86987,-0.0002823,59.05225), (0,0,0), (0,0,0), (0,0,0)), ((0.651,0.651,0.277,0.277), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((-100.9348,-0.0002823,-1.414172), (0,0,0), (0,0,0), (0,0,0)), ((-0.09,0,0,0.996), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody), (EmberTwin, Relative: (((0.1500001,0.1500001,0.1500001), (0.1500001,0.15,0.1500001)), ((-18.68774,-108.476,28.32202), (0,0,0), (0,0,0), (0,0,0)), ((-0.59,-0.081,-0.795,-0.116), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500001), (0.1500001,0.15,0.1500001)), ((33.91889,-108.476,-0.9367304), (0,0,0), (0,0,0), (0,0,0)), ((-0.039,0,-0.004,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody), (EmberTwin, Relative: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.1500001,0.1500001)), ((-21.56177,-117.199,40.99878), (0,0,0), (0,0,0), (0,0,0)), ((-0.795,0.116,0.59,-0.081), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.1500001,0.1500001)), ((45.95156,-117.199,-5.853554), (0,0,0), (0,0,0), (0,0,0)), ((0.031,-0.001,0.043,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Front (OWRigidbody), (AshTwin, Relative: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((55.87427,0.0002823,84.0708), (0,0,0), (0,0,0), (0,0,0)), ((-0.277,0.277,0.651,-0.651), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500002), (0.1500001,0.15,0.1500001)), ((-93.99052,0.0002823,-36.81863), (0,0,0), (0,0,0), (0,0,0)), ((0.09,0,0,-0.996), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (AshTwin, Relative: (((0.15,0.1500001,0.1500001), (0.15,0.15,0.15)), ((-147.5017,-0.0013885,2.360352), (0,0,0), (0,0,0), (0,0,0)), ((-0.02,-0.019,0.707,0.707), (0,0,0), (0,0,0))), Surface: (((0.15,0.1500001,0.1500001), (0.15,0.15,0.15)), ((119.4725,-0.0013885,-86.53693), (0,0,0), (0,0,0), (0,0,0)), ((-0.035,0,0,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (GiantsDeep, Relative: (((0.1500002,0.1500002,0.1500002), (0.1500001,0.1500001,0.1500001)), ((457.6807,-79.58923,-198.8633), (0,0,0), (0,0,0), (0,0,0)), ((0.721,0.647,-0.243,-0.053), (0,0,0), (0,0,0))), Surface: (((0.1500002,0.1500002,0.1500002), (0.1500001,0.1500001,0.1500001)), ((406.3332,-79.58923,-289.6748), (0,0,0), (0,0,0), (0,0,0)), ((-0.002,0,0,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (BrittleHollow, Relative: (((0.1500001,0.1500002,0.1500001), (0.1500001,0.1500001,0.15)), ((-50.39648,-294.5183,10.70044), (0,0,0), (0,0,0), (0,0,0)), ((0.643,0,-0.766,0), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500002,0.1500001), (0.1500001,0.1500001,0.15)), ((1.786622,-294.5183,51.48896), (0,0,0), (0,0,0), (0,0,0)), ((0.086,0,0.003,-0.996), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.1500001,0.1500001,0.1500001), (0.15,0.15,0.15)), ((80.15088,-116.9961,-49.23779), (0,0,0), (0,0,0), (0,0,0)), ((0.413,0.276,-0.85,0.177), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500001), (0.15,0.15,0.15)), ((-86.30589,-116.9961,-37.41415), (0,0,0), (0,0,0), (0,0,0)), ((-0.005,0,-0.001,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.15,0.15,0.1500001), (0.15,0.15,0.15)), ((-150.7427,50.97838,30.5918), (0,0,0), (0,0,0), (0,0,0)), ((-0.544,0.804,-0.023,-0.236), (0,0,0), (0,0,0))), Surface: (((0.15,0.15,0.1500001), (0.15,0.15,0.15)), ((111.5218,50.97838,105.9345), (0,0,0), (0,0,0), (0,0,0)), ((-0.035,-0.001,0.04,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall_Back (OWRigidbody), (EmberTwin, Relative: (((0.1500001,0.1500001,0.1500001), (0.1500001,0.1500001,0.15)), ((12.65601,-89.22191,-39.43164), (0,0,0), (0,0,0), (0,0,0)), ((-0.34,0.154,-0.919,0.126), (0,0,0), (0,0,0))), Surface: (((0.1500001,0.1500001,0.1500001), (0.1500001,0.1500001,0.15)), ((-39.5597,-89.22191,12.24986), (0,0,0), (0,0,0), (0,0,0)), ((-0.013,0,0.012,-1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (TimberHearth, Relative: (((0.561585,0.5615845,0.5615844), (0.5615844,0.5615841,0.5615841)), ((26.94959,20.23764,216.5986), (0,0,0), (0,0,0), (0,0,0)), ((0.063,0.738,0.671,-0.033), (0,0,0), (0,0,0))), Surface: (((0.561585,0.5615845,0.5615844), (0.5615844,0.5615841,0.5615841)), ((-64.15211,20.23764,-208.6282), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.007,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (QuantumMoon, Relative: (((0.3369504,0.3369504,0.3369503), (0.5615839,0.561584,0.5615838)), ((0.9658203,3.279541,5.289063), (-49.92022,19.94364,-134.356), (-2995.213,1196.619,-8061.361), (0,0,0)), ((0,0.087,0,-0.996), (0,0,0), (0,0,0))), Surface: (((0.3369504,0.3369504,0.3369503), (0.5615839,0.561584,0.5615838)), ((1.869585,3.279541,5.040996), (-49.92022,19.94364,-134.356), (-2995.213,1196.619,-8061.361), (0,0,0)), ((0.471,0.072,-0.132,-0.869), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (EmberTwin, Relative: (((0.5615844,0.5615845,0.5615842), (0.5615843,0.5615842,0.561584)), ((10.07764,-88.9769,18.57446), (0,0,0), (0,0,0), (0,0,0)), ((0.283,0.101,0.953,-0.038), (0,0,0), (0,0,0))), Surface: (((0.5615844,0.5615845,0.5615842), (0.5615843,0.5615842,0.561584)), ((9.43502,-88.9769,-18.90899), (0,0,0), (0,0,0), (0,0,0)), ((-0.009,0,0.017,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (EmberTwin, Relative: (((0.5615842,0.5615841,0.5615839), (0.5615841,0.5615841,0.5615839)), ((4.519043,-115.7816,-26.01147), (0,0,0), (0,0,0), (0,0,0)), ((-0.205,-0.109,0.973,-0.008), (0,0,0), (0,0,0))), Surface: (((0.5615842,0.5615841,0.5615839), (0.5615841,0.5615841,0.5615839)), ((-23.89937,-115.7816,11.21778), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.012,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (EmberTwin, Relative: (((0.5615839,0.5615839,0.5615839), (0.561584,0.561584,0.5615839)), ((14.06958,-135.6514,24.97461), (0,0,0), (0,0,0), (0,0,0)), ((0.345,0.007,0.938,-0.009), (0,0,0), (0,0,0))), Surface: (((0.5615839,0.5615839,0.5615839), (0.561584,0.561584,0.5615839)), ((12.38803,-135.6514,-25.84997), (0,0,0), (0,0,0), (0,0,0)), ((-0.093,-0.002,0.026,0.995), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (EmberTwin, Relative: (((0.5615838,0.5615839,0.5615839), (0.5615839,0.5615839,0.5615839)), ((-4.859375,-45.70147,-17.7395), (0,0,0), (0,0,0), (0,0,0)), ((0.008,-0.184,0.983,0.017), (0,0,0), (0,0,0))), Surface: (((0.5615838,0.5615839,0.5615839), (0.5615839,0.5615839,0.5615839)), ((-11.74413,-45.70147,14.15552), (0,0,0), (0,0,0), (0,0,0)), ((0,0,0.032,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (Interloper, Relative: (((0.0892331,0.0892332,0.0892332), (0.0892331,0.0892332,0.0892332)), ((-101.2832,-9.067476,4.012281), (0,0,0), (0,0,0), (0,0,0)), ((0.658,0.528,-0.519,-0.135), (0,0,0), (0,0,0))), Surface: (((0.0892331,0.0892332,0.0892332), (0.0892331,0.0892332,0.0892332)), ((101.2832,-9.067476,-4.012271), (0,0,0), (0,0,0), (0,0,0)), ((0.879,0,0,-0.477), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (QuantumMoon, Relative: (((0.0892332,0.0892332,0.0892332), (0.0892331,0.0892332,0.0892331)), ((0.3046875,22.01001,-1.755371), (-49.92022,19.94364,-134.356), (-2995.213,1196.619,-8061.361), (0,0,0)), ((0.076,-0.483,-0.871,-0.042), (0,0,0), (0,0,0))), Surface: (((0.0892332,0.0892332,0.0892332), (0.0892331,0.0892332,0.0892331)), ((-0.0047589,22.01001,-1.781611), (-49.92022,19.94364,-134.356), (-2995.213,1196.619,-8061.361), (0,0,0)), ((0.894,0,0,-0.449), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500009,0.8500009,0.8500001), (0.8500002,0.8500003,0.8500001)), ((-19.4209,-314.3537,10.8324), (0,0,0), (0,0,0), (0,0,0)), ((0.522,0,-0.853,0), (0,0,0), (0,0,0))), Surface: (((0.8500009,0.8500009,0.8500001), (0.8500002,0.8500003,0.8500001)), ((7.295427,-314.3537,21.00688), (0,0,0), (0,0,0), (0,0,0)), ((0.035,0,0.001,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (AshTwin, Relative: (((1.275009,1.275006,1.27501), (0.8500003,0.8500003,0.8500003)), ((19.47974,8.981414,11.48486), (0,0,0), (0,0,0), (0,0,0)), ((-0.351,0.614,-0.614,-0.351), (0,0,0), (0,0,0))), Surface: (((1.275009,1.275006,1.27501), (0.8500003,0.8500003,0.8500003)), ((-22.54431,8.981414,1.76526), (0,0,0), (0,0,0), (0,0,0)), ((0.982,0,0,0.188), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500007,0.8500007,0.85), (0.8500001,0.8500001,0.85)), ((-21.50195,-314.3537,-1.61731), (0,0,0), (0,0,0), (0,0,0)), ((0.732,0,-0.681,0), (0,0,0), (0,0,0))), Surface: (((0.8500007,0.8500007,0.85), (0.8500001,0.8500001,0.85)), ((-5.326513,-314.3537,20.89445), (0,0,0), (0,0,0), (0,0,0)), ((-0.034,0,0,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500002,0.8500006,0.8500003), (0.8500001,0.8500004,0.8500002)), ((-17.30371,-314.3536,-13.19043), (0,0,0), (0,0,0), (0,0,0)), ((0.897,0,-0.443,0), (0,0,0), (0,0,0))), Surface: (((0.8500002,0.8500006,0.8500003), (0.8500001,0.8500004,0.8500002)), ((-15.99479,-314.3536,14.75034), (0,0,0), (0,0,0), (0,0,0)), ((-0.035,0,0,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500006,0.8500007,0.8500002), (0.8500001,0.8500001,0.8500001)), ((-19.92383,-314.3537,-7.753906), (0,0,0), (0,0,0), (0,0,0)), ((0.801,0,-0.598,0), (0,0,0), (0,0,0))), Surface: (((0.8500006,0.8500007,0.8500002), (0.8500001,0.8500001,0.8500001)), ((-11.09584,-314.3537,18.27469), (0,0,0), (0,0,0), (0,0,0)), ((-0.034,0,0.003,0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500007,0.8500007,0.85), (0.8500003,0.8500001,0.85)), ((-14.6123,-314.3537,16.16626), (0,0,0), (0,0,0), (0,0,0)), ((0.394,0,-0.919,0), (0,0,0), (0,0,0))), Surface: (((0.8500007,0.8500007,0.85), (0.8500003,0.8500001,0.85)), ((13.38326,-314.3537,17.19755), (0,0,0), (0,0,0), (0,0,0)), ((0.035,0,0.003,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrb (OWRigidbody): (Prefab_NOM_InterfaceOrb (OWRigidbody), (BrittleHollow, Relative: (((0.8500009,0.8500012,0.8500003), (0.8500002,0.8500004,0.8500002)), ((-21.57422,-314.3537,4.460205), (0,0,0), (0,0,0), (0,0,0)), ((0.615,0,-0.789,0), (0,0,0), (0,0,0))), Surface: (((0.8500009,0.8500012,0.8500003), (0.8500002,0.8500004,0.8500002)), ((0.6461222,-314.3537,22.02097), (0,0,0), (0,0,0), (0,0,0)), ((0.035,0,-0.001,-0.999), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (2) (OWRigidbody): (Raft_Body (2) (OWRigidbody), (Stranger, Relative: (((1,1.000001,1.000001), (1,1,1)), ((-173.8564,163.5439,25.11963), (0,0,0), (0,0,0), (0,0,0)), ((-0.913,-0.382,-0.097,0.108), (0,0,0), (0,0,0))), Surface: (((1,1.000001,1.000001), (1,1,1)), ((200.7502,-2.340035,-131.5202), (0,0,0), (0,0,0), (0,0,0)), ((-1,0.006,0,0.008), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (3) (OWRigidbody): (Raft_Body (3) (OWRigidbody), (Stranger, Relative: (((1.000001,1.000001,1.000001), (1,1,1.000001)), ((-199.4014,57.68262,226.8804), (0,0,0), (0,0,0), (0,0,0)), ((-0.494,-0.649,0.578,-0.04), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1,1,1.000001)), ((54.37031,-70.21004,-294.4101), (0,0,0), (0,0,0), (0,0,0)), ((-1,0.009,0,-0.027), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body_AirlockRaftHouse (OWRigidbody): (Raft_Body_AirlockRaftHouse (OWRigidbody), (Stranger, Relative: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((-104.2515,165.7734,221.0115), (0,0,0), (0,0,0), (0,0,0)), ((-0.106,0.398,-0.831,0.375), (0,0,0), (0,0,0))), Surface: (((1.000001,1.000001,1.000001), (1.000001,1.000001,1.000001)), ((72.2346,71.76005,-277.1785), (0,0,0), (0,0,0), (0,0,0)), ((0.992,-0.122,0,0), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (1) (OWRigidbody): (Raft_Body (1) (OWRigidbody), (Stranger, Relative: (((0.9999999,1,0.9999999), (0.9999999,0.9999999,0.9999998)), ((276.2397,-145.2803,25.12207), (0,0,0), (0,0,0), (0,0,0)), ((0.29,-0.929,-0.163,-0.16), (0,0,0), (0,0,0))), Surface: (((0.9999999,1,0.9999999), (0.9999999,0.9999999,0.9999998)), ((-272.2501,92.71956,123.8098), (0,0,0), (0,0,0), (0,0,0)), ((0.966,-0.255,-0.011,0.043), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (8) (OWRigidbody): (Raft_Body (8) (OWRigidbody), (Stranger, Relative: (((1.000002,1.000001,1.000001), (1.000001,1.000001,1)), ((-145.2896,-3.886719,-271.4133), (0,0,0), (0,0,0), (0,0,0)), ((-0.344,-0.566,-0.729,-0.171), (0,0,0), (0,0,0))), Surface: (((1.000002,1.000001,1.000001), (1.000001,1.000001,1)), ((206.5964,-137.2491,182.4006), (0,0,0), (0,0,0), (0,0,0)), ((-0.973,-0.025,-0.006,-0.229), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (OWRigidbody): (Raft_Body (OWRigidbody), (Stranger, Relative: (((1,1,1), (1,1,1)), ((30.21631,54.39648,-292.4185), (0,0,0), (0,0,0), (0,0,0)), ((-0.456,0.543,0.596,-0.377), (0,0,0), (0,0,0))), Surface: (((1,1,1), (1,1,1)), ((150.4001,23.60019,257.3002), (0,0,0), (0,0,0), (0,0,0)), ((-0.999,0.035,0.001,-0.018), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (4) (OWRigidbody): (Raft_Body (4) (OWRigidbody), (Stranger, Relative: (((1,1,1), (0.9999999,0.9999999,0.9999999)), ((-1.479004,-102.4209,283.5984), (0,0,0), (0,0,0), (0,0,0)), ((-0.245,-0.819,0.495,0.156), (0,0,0), (0,0,0))), Surface: (((1,1,1), (0.9999999,0.9999999,0.9999999)), ((-195.4201,-38.62993,-226.3603), (0,0,0), (0,0,0), (0,0,0)), ((-0.992,0.086,0.008,-0.092), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Raft_Body (7) (OWRigidbody): (Raft_Body (7) (OWRigidbody), (Stranger, Relative: (((0.9999999,1,1), (0.9999999,0.9999999,1)), ((191.9653,-212.708,-42.10889), (0,0,0), (0,0,0), (0,0,0)), ((0.123,-0.114,0.379,0.91), (0,0,0), (0,0,0))), Surface: (((0.9999999,1,1), (0.9999999,0.9999999,1)), ((-236.5096,-21.89989,165.6868), (0,0,0), (0,0,0), (0,0,0)), ((-0.999,0.037,0,0.007), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (InnerDarkBramble_EscapePod, Relative: (((0.3000001,0.2999999,0.2999999), (0.3,0.2999999,0.2999999)), ((463.6121,163.7813,71.7525), (0,0,0), (0,0,0), (0,0,0)), ((-0.036,0.686,0.727,0.001), (0,0,0), (0,0,0))), Surface: (((0.3000001,0.2999999,0.2999999), (0.3,0.2999999,0.2999999)), ((-469.0283,163.7813,9.843013), (0,0,0), (0,0,0), (0,0,0)), ((-0.492,0.361,-0.469,0.638), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (1) (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (1) (OWRigidbody), (InnerDarkBramble_Vessel, Relative: (((0.3183801,0.3183799,0.3183801), (0.31838,0.3183799,0.3183799)), ((-180.8779,9.291016,-11.90552), (0,0,0), (0,0,0), (0,0,0)), ((0.033,-0.681,0.115,-0.722), (0,0,0), (0,0,0))), Surface: (((0.3183801,0.3183799,0.3183801), (0.31838,0.3183799,0.3183799)), ((180.1972,9.291016,-19.68448), (0,0,0), (0,0,0), (0,0,0)), ((0.727,0.003,0.002,0.687), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.3000004,0.3000002,0.3000005), (0.3000003,0.3000001,0.3000003)), ((312.1973,71.65765,-119.5135), (0,0,0), (0,0,0), (0,0,0)), ((-0.506,-0.641,0.223,0.532), (0,0,0), (0,0,0))), Surface: (((0.3000004,0.3000002,0.3000005), (0.3000003,0.3000001,0.3000003)), ((-63.48541,71.65765,-328.2076), (0,0,0), (0,0,0), (0,0,0)), ((-0.354,-0.018,-0.046,-0.934), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (BrittleHollow, Relative: (((0.3900003,0.39,0.3900003), (0.3900002,0.39,0.3900002)), ((-25.09863,173.9844,-20.46814), (0,0,0), (0,0,0), (0,0,0)), ((0.033,-0.832,0.099,0.546), (0,0,0), (0,0,0))), Surface: (((0.3900003,0.39,0.3900003), (0.3900002,0.39,0.3900002)), ((-24.51551,173.9844,21.16307), (0,0,0), (0,0,0), (0,0,0)), ((0.013,0,0.001,1), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Prefab_NOM_InterfaceOrbSmall (OWRigidbody): (Prefab_NOM_InterfaceOrbSmall (OWRigidbody), (EmberTwin, Relative: (((0.3199999,0.32,0.32), (0.32,0.32,0.32)), ((-113.2544,77.92848,26.99023), (0,0,0), (0,0,0), (0,0,0)), ((0.369,-0.402,0.401,0.736), (0,0,0), (0,0,0))), Surface: (((0.3199999,0.32,0.32), (0.32,0.32,0.32)), ((87.06914,77.92848,77.29163), (0,0,0), (0,0,0), (0,0,0)), ((0.083,0.002,0.024,0.996), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1,1,1)), ((24.57715,10.66016,-582.7607), (0,0,0), (0,0,0), (0,0,0)), ((0,0.936,0,0.351), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((-76.99175,10.66016,-578.175), (0,0,0), (0,0,0), (0,0,0)), ((-0.659,-0.231,0.237,0.675), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1,0.9999999,1), (1,1,1)), ((109.8823,7.182129,-291.6539), (0,0,0), (0,0,0), (0,0,0)), ((-0.004,-0.609,-0.013,-0.793), (0,0,0), (0,0,0))), Surface: (((1,0.9999999,1), (1,1,1)), ((57.5677,7.182129,-306.3039), (0,0,0), (0,0,0), (0,0,0)), ((0.53,0.48,-0.469,-0.518), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((120.9297,19.67578,-164.8489), (0,0,0), (0,0,0), (0,0,0)), ((0,0.972,0,-0.233), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((90.46674,19.67578,-183.3437), (0,0,0), (0,0,0), (0,0,0)), ((-0.537,0.327,-0.405,0.664), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((137.8643,31,-220.9742), (0,0,0), (0,0,0), (0,0,0)), ((0,0.743,0,0.67), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((97.39795,31,-241.5571), (0,0,0), (0,0,0), (0,0,0)), ((-0.573,-0.277,0.336,0.694), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1,1,1), (1,1,1)), ((-3.594238,63.09277,240.7129), (0,0,0), (0,0,0), (0,0,0)), ((0,-0.766,0,0.643), (0,0,0), (0,0,0))), Surface: (((1,1,1), (1,1,1)), ((38.25979,63.09277,237.68), (0,0,0), (0,0,0), (0,0,0)), ((-0.217,-0.16,-0.571,-0.775), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((65.91992,24.35986,-232.2135), (0,0,0), (0,0,0), (0,0,0)), ((0,0.973,0,0.229), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((24.59493,24.35986,-240.1325), (0,0,0), (0,0,0), (0,0,0)), ((-0.667,-0.062,0.068,0.739), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1,1,1), (1,1,1)), ((-124.791,10.08008,696.2073), (0,0,0), (0,0,0), (0,0,0)), ((0,-0.996,0,-0.087), (0,0,0), (0,0,0))), Surface: (((1,1,1), (1,1,1)), ((-1.999831,10.08008,707.3), (0,0,0), (0,0,0), (0,0,0)), ((-0.702,-0.001,-0.001,-0.712), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1,1,1)), ((102.2637,31.0498,-255.4259), (0,0,0), (0,0,0), (0,0,0)), ((0,0.999,0,0.032), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((56.35574,31.0498,-269.3033), (0,0,0), (0,0,0), (0,0,0)), ((-0.656,0.104,-0.117,0.738), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1,0.9999999,1.000001), (1,1,1)), ((80.56445,25.66797,-186.5034), (0,0,0), (0,0,0), (0,0,0)), ((0,0.195,0.003,-0.981), (0,0,0), (0,0,0))), Surface: (((1,0.9999999,1.000001), (1,1,1)), ((46.95446,25.66797,-197.6599), (0,0,0), (0,0,0), (0,0,0)), ((-0.661,-0.005,-0.006,-0.75), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((221.4878,-53.04004,-229.6412), (0,0,0), (0,0,0), (0,0,0)), ((0,0.67,0,-0.743), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1.000001,1,1.000001)), ((178.246,-53.04004,-264.6135), (0,0,0), (0,0,0), (0,0,0)), ((-0.733,0.263,0.212,-0.591), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources	
Cage_Body (OWRigidbody): (Cage_Body (OWRigidbody), (DreamWorld, Relative: (((1.000001,1,1.000001), (1,1,1)), ((-77.88184,80.93506,270.0791), (0,0,0), (0,0,0), (0,0,0)), ((0,-0.887,0,-0.462), (0,0,0), (0,0,0))), Surface: (((1.000001,1,1.000001), (1,1,1)), ((-29.79981,80.93506,279.5), (0,0,0), (0,0,0), (0,0,0)), ((-0.542,0.182,0.261,-0.778), (0,0,0), (0,0,0)))))	PacificEngine's Common Resources
     */

    public static class Planet
    {
        private const string classId = "PacificEngine.OW_CommonResources.Game.State.Planet";

        public class Plantoid
        {
            public Position.Size size { get; }
            public Gravity gravity { get; }
            public RelativeState state { get; }

            public Plantoid(Position.Size size, Gravity gravity, Quaternion orientation, float rotationalSpeed, Position.HeavenlyBodies parent, KeplerCoordinates orbit)
            {
                this.size = size;
                this.gravity = gravity;

                var angularVelocity = orientation * (Vector3.up * rotationalSpeed);
                this.state = RelativeState.fromKepler(parent, ScaleState.identity, orbit, new OrientationState(orientation, angularVelocity, Vector3.zero));
            }

            public Plantoid(Position.Size size, Gravity gravity, Quaternion orientation, float rotationalSpeed, Position.HeavenlyBodies parent, Vector3 position, Vector3 velocity)
            {
                this.size = size;
                this.gravity = gravity;

                var angularVelocity = orientation * (Vector3.up * rotationalSpeed);
                this.state = RelativeState.fromRelative(parent, new MovementState(ScaleState.identity, new PositionState(position, velocity, Vector3.zero, Vector3.zero), new OrientationState(orientation, angularVelocity, Vector3.zero)));
            }

            public Plantoid(Position.Size size, Gravity gravity, Position.HeavenlyBodies parent, OWRigidbody target)
            {
                this.size = size;
                this.gravity = gravity;
                this.state = RelativeState.fromGlobal(parent, target);
            }

            public Plantoid(Position.Size size, Gravity gravity, RelativeState state)
            {
                this.size = size;
                this.gravity = gravity;
                this.state = state;
            }

            public override string ToString()
            { 
                return $"({size}, {gravity}, {state})";
            }

            public override bool Equals(System.Object other)
            {
                if (other != null && other is Plantoid)
                {
                    var obj = other as Plantoid;
                    return size == obj.size
                        && gravity == obj.gravity
                        && state == obj.state;
                }
                return false;
            }

            public override int GetHashCode()
            {
                return (size.GetHashCode() * 4)
                    + (gravity.GetHashCode() * 16)
                    + (state.GetHashCode() * 64);
            }
        }

        private static float lastUpdate = 0f;
        private static List<string> debugIds = new List<string>();
        public static bool debugPlanetPosition { get; set; } = false;

        private static Dictionary<Position.HeavenlyBodies, Tuple<InitialMotion, Vector3, Vector3, Quaternion, Vector3, GravityVolume>> dict = new Dictionary<Position.HeavenlyBodies, Tuple<InitialMotion, Vector3, Vector3, Quaternion, Vector3, GravityVolume>>();
        private static Dictionary<Position.HeavenlyBodies, Plantoid> _mapping = defaultMapping;
        private static bool update = false;


        public static Dictionary<Position.HeavenlyBodies, Plantoid> mapping
        {
            get
            {
                var original = defaultMapping;
                var mapping = new Dictionary<Position.HeavenlyBodies, Plantoid>();
                foreach (Position.HeavenlyBodies body in _mapping.Keys)
                {
                    var owBody = Position.getBody(body);
                    if (owBody != null)
                    {
                        var parent = _mapping[body].state.parent;

                        var gravity = Position.getGravity(body);
                        var size = Position.getSize(body);

                        mapping.Add(body, new Plantoid(size, gravity, parent, owBody));
                    }
                    else
                    {
                        mapping.Add(body, new Plantoid(_mapping[body].size, _mapping[body].gravity, _mapping[body].state));
                    }
                }

                return mapping;
            }
            set
            {
                Dictionary<Position.HeavenlyBodies, Plantoid> mapping = defaultMapping;
                foreach(var map in value)
                {
                    mapping[map.Key] = map.Value;
                }
                _mapping = mapping;
                update = true;
                updateList();
            }
        }

        public static Dictionary<Position.HeavenlyBodies, Plantoid> defaultMapping
        {
            get
            {
                var mapping = new Dictionary<Position.HeavenlyBodies, Plantoid>();
                mapping.Add(Position.HeavenlyBodies.Sun, new Plantoid(new Position.Size(2000, 20000), Gravity.of(2, 400000000000), new Quaternion(0, 0, 0, 1), 0f, Position.HeavenlyBodies.None, Vector3.zero, Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.SunStation, new Plantoid(new Position.Size(200f, 550), Gravity.of(2, 300000000), new Quaternion(0.502f, 0.502f, -0.498f, -0.498f), 0.1817f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0061f, 2296.04395f, 90, 180.3505f, 0, 89.7487f)));
                mapping.Add(Position.HeavenlyBodies.HourglassTwins, new Plantoid(new Position.Size(0f, 692.8f), Gravity.of(1, 800000), new Quaternion(0, -0.887f, 0, 0.462f), 0f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0019f, 5000.00879f, 90, 35.1033f, 0, 89.9276f)));
                mapping.Add(Position.HeavenlyBodies.AshTwin, new Plantoid(new Position.Size(200f, 692.8f), Gravity.of(1, 1600000), new Quaternion(0, 0.954f, 0, 0.298f), 0.07f, Position.HeavenlyBodies.HourglassTwins, KeplerCoordinates.fromTrueAnomaly(0, 249.998428f, 90, 55.2766f, 180, 89.7853f)));
                mapping.Add(Position.HeavenlyBodies.EmberTwin, new Plantoid(new Position.Size(200f, 692.8f), Gravity.of(1, 1600000), new Quaternion(0, -0.886f, 0, 0.463f), 0.05f, Position.HeavenlyBodies.HourglassTwins, KeplerCoordinates.fromTrueAnomaly(0, 249.998764f, 90, 235.2719f, 180, 89.79f)));
                mapping.Add(Position.HeavenlyBodies.TimberHearth, new Plantoid(new Position.Size(250, 1061), Gravity.of(1, 3000000), new Quaternion(0, 0.996f, 0, 0.087f), 0.01f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0009f, 8593.08984f, 90, 190.0414f, 0, 89.9723f)));
                mapping.Add(Position.HeavenlyBodies.TimberHearthProbe, new Plantoid(new Position.Size(0.5f, 0.5f), Gravity.of(2, 10), new Quaternion(0.704f, -0.704f, 0.064f, -0.064f), 0f, Position.HeavenlyBodies.TimberHearth, KeplerCoordinates.fromTrueAnomaly(0, 350.097443f, 90, 100.3732f, 0, 89.712f)));
                mapping.Add(Position.HeavenlyBodies.Attlerock, new Plantoid(new Position.Size(100, 223.6f), Gravity.of(2, 50000000), new Quaternion(0, -0.642f, 0, -0.767f), 0.0609f, Position.HeavenlyBodies.TimberHearth, KeplerCoordinates.fromTrueAnomaly(0, 899.99939f, 90, 280.1425f, 0, 89.8907f)));
                mapping.Add(Position.HeavenlyBodies.BrittleHollow, new Plantoid(new Position.Size(300, 1162), Gravity.of(1, 3000000), new Quaternion(0, 0.642f, 0, -0.766f), 0.02f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0006f, 11690.8877f, 90, 259.9969f, 0, 90.0117f)));
                mapping.Add(Position.HeavenlyBodies.HollowLantern, new Plantoid(new Position.Size(130, 421.2f), Gravity.of(1, 910000), new Quaternion(-0.542f, 0.449f, -0.455f, -0.546f), 0.2f, Position.HeavenlyBodies.BrittleHollow, KeplerCoordinates.fromTrueAnomaly(0, 1000.00073f, 90, 260.1346f, 0, 89.8954f)));
                mapping.Add(Position.HeavenlyBodies.GiantsDeep, new Plantoid(new Position.Size(900, 5422), Gravity.of(1, 21780000), new Quaternion(0, 0.105f, 0, -0.995f), 0f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0003f, 16457.5918f, 90, 192.0577f, 0, 89.9474f)));
                mapping.Add(Position.HeavenlyBodies.ProbeCannon, new Plantoid(new Position.Size(200, 550), Gravity.of(2, 300000000), Quaternion.identity, 0f, Position.HeavenlyBodies.GiantsDeep, KeplerCoordinates.fromTrueAnomaly(0, 1199.99463f, 90, 303.2822f, 180, 89.785f)));
                mapping.Add(Position.HeavenlyBodies.DarkBramble, new Plantoid(new Position.Size(650, 1780), Gravity.of(1, 3250000), new Quaternion(0, 0.996f, 0, 0.087f), 0f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0003f, 20000.0039f, 90, 10.0033f, 0, 90.0006f)));
                mapping.Add(Position.HeavenlyBodies.WhiteHole, new Plantoid(new Position.Size(30, 200), Gravity.of(2, 1000000), new Quaternion(0, 0.7071068f, 0, 0.7071068f), 0f, Position.HeavenlyBodies.Sun, new Vector3(-23000, 0, 0), Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.WhiteHoleStation, new Plantoid(new Position.Size(30, 100), Gravity.of(2, 100000), new Quaternion(0, 0.04225808f, 0, -0.9991068f), 0f, Position.HeavenlyBodies.Sun, new Vector3(-22538.19f, 0, 0), Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.Interloper, new Plantoid(new Position.Size(110, 301.2f), Gravity.of(1, 550000), new Quaternion(0, 1, 0, 0), 0.0034f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.8194f, 13246.3066f, 90, 180.0053f, 180, 179.9959f)));
                mapping.Add(Position.HeavenlyBodies.Stranger, new Plantoid(new Position.Size(600, 1000), Gravity.of(2, 300000000), new Quaternion(-0.381f, -0.892f, 0.034f, -0.241f), 0.05f, Position.HeavenlyBodies.Sun, new Vector3(8168.197f, 8399.999f, 2049.527f), Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.DreamWorld, new Plantoid(new Position.Size(1000, 1000), Gravity.of(2, 300000000), new Quaternion(0.032f, 0.015f, -0.412f, -0.91f), 0f, Position.HeavenlyBodies.Sun, new Vector3(7791.638f, 7000, 1881.588f), Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.QuantumMoon, new Plantoid(new Position.Size(110, 301.2f), Gravity.of(1, 550000), Quaternion.identity, 0f, Position.HeavenlyBodies.None, Vector3.zero, Vector3.zero));
                mapping.Add(Position.HeavenlyBodies.BackerSatilite, new Plantoid(new Position.Size(5, 100), Gravity.of(2, 100), new Quaternion(0, 0, 0, 1), 0f, Position.HeavenlyBodies.Sun, new Vector3(41996.69f, 5003.578f, -22498.26f), new Vector3(-46.8846f, 28.13076f, 24.70819f)));
                mapping.Add(Position.HeavenlyBodies.MapSatilite, new Plantoid(new Position.Size(5, 100), Gravity.of(2, 500), new Quaternion(-0.084f, -0.76f, -0.1f, 0.637f), 0.0048f, Position.HeavenlyBodies.Sun, KeplerCoordinates.fromTrueAnomaly(0.0002f, 25999.9961f, 10, 344.9366f, 270, 90.0656f)));
                
                return mapping;
            }
        }

        public static void Start()
        {
            Helper.helper.HarmonyHelper.AddPrefix<OrbitLine>("Update", typeof(Planet), "onOrbitLineUpdate");
            Helper.helper.HarmonyHelper.AddPrefix<EllipticOrbitLine>("Update", typeof(Planet), "onOrbitLineUpdate");
            Helper.helper.HarmonyHelper.AddPrefix<MapSatelliteOrbitLine>("Update", typeof(Planet), "onOrbitLineUpdate");
            Helper.helper.HarmonyHelper.AddPostfix<OWRigidbody>("Awake", typeof(Planet), "onOWRigidbodyAwake");
            Helper.helper.HarmonyHelper.AddPrefix<InitialMotion>("Start", typeof(Planet), "onInitialMotionStart");
            Helper.helper.HarmonyHelper.AddPrefix<InitialVelocity>("Start", typeof(Planet), "onInitialVelocityStart");
            Helper.helper.HarmonyHelper.AddPrefix<MatchInitialMotion>("Start", typeof(Planet), "onMatchInitialMotionStart");
            Helper.helper.HarmonyHelper.AddPrefix<KinematicRigidbody>("Move", typeof(Planet), "onKinematicRigidbodyMove");
        }

        public static void Awake()
        {
        }

        public static void Destroy()
        {
        }

        public static void Update()
        {
            var console = DisplayConsole.getConsole(ConsoleLocation.BottomRight);
            if (Time.time - lastUpdate > 0.2f)
            {
                lastUpdate = Time.time;
                foreach (var id in debugIds)
                {
                    console.setElement(id, "", 0f);
                }
                debugIds.Clear();

                if (debugPlanetPosition)
                {
                    var index = 16.0001f;

                    debugIds.Add(classId + ".Planet.Header");
                    console.setElement(classId + ".Planet.Header", "Planet Coordinates", index);
                    foreach (var map in mapping)
                    {
                        var id = classId + ".Planet." + map.Key;
                        debugIds.Add(id + ".1");
                        debugIds.Add(id + ".2");
                        console.setElement(id + ".1", $" {map.Key.ToString()}: {map.Value.size}, {map.Value.gravity}, {map.Value.state.parent.ToString()}", index + 0.0001f);
                        if (map.Value.state.orbit != null && map.Value.state.orbit.coordinates != null && map.Value.state.orbit.coordinates.isOrbit())
                        {
                            console.setElement(id + ".2", $"{map.Value.state.orbit.coordinates.ToString()}", index + 0.0002f);
                        }
                        else if (map.Value.state.relative != null && map.Value.state.relative.position != null)
                        {
                            console.setElement(id + ".2", $"{map.Value.state.relative.position}", index + 0.0002f);
                        }                        

                        index += 0.0005f;
                    }
                }
            }

            updateList();
        }

        public static void FixedUpdate()
        {
        }

        private static void updateList()
        {
            if (update && Time.timeSinceLevelLoad > 0.01f)
            {
                update = false;

                var ignorables = new HashSet<OWRigidbody>();
                foreach (var body in _mapping.Keys)
                {
                    ignorables.Add(Position.getBody(body));
                }
                var newState = new Dictionary<Position.HeavenlyBodies, AbsoluteState>();
                var movingItems = trackMovingItems(ignorables);
                foreach (var body in _mapping.Keys)
                {
                    var state = updatePlanet(body, newState);
                    if (state != null) {
                        newState.Add(body, state);
                    }
                }
                relocateMovingItems(newState, movingItems);
            }
        }

        private static List<Tuple<OWRigidbody, RelativeState>> trackMovingItems(HashSet<OWRigidbody> ignorables)
        {
            var sunStation = Position.getBody(Position.HeavenlyBodies.SunStation);
            var giantDeep = Position.getBody(Position.HeavenlyBodies.GiantsDeep);
            var probeCannon = Position.getBody(Position.HeavenlyBodies.ProbeCannon);
            var whiteHole = Position.getBody(Position.HeavenlyBodies.WhiteHole);

            List<Tuple<OWRigidbody, RelativeState>> bodies = new List<Tuple<OWRigidbody, RelativeState>>();
            if (PlayerState.IsInsideTheEye())
            {
                return bodies;
            }
            if (!PlayerState.IsInsideShip() && !PlayerState.IsInsideShuttle())
            {
                bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.Player)));
            }
            else
            {
                var body = Position.getBody(Position.HeavenlyBodies.Player);
                if (body != null)
                    ignorables.Add(body);
            }
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.Ship)));
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.Probe)));
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.ModelShip)));
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.NomaiProbe)));
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.NomaiEmberTwinShuttle)));
            bodies.Add(captureState(Position.getBody(Position.HeavenlyBodies.NomaiBrittleHollowShuttle)));
            foreach (var body in bodies)
            {
                if (body?.Item1 != null)
                    ignorables.Add(body.Item1);
            }

            foreach (var child in GameObject.FindObjectsOfType<OWRigidbody>())
            {
                var name = child?.gameObject?.name;
                if (name == null)
                {
                    continue;
                }
                if (sunStation != null)
                {
                    if (child.GetOrigParentBody() == sunStation
                            && (name.StartsWith("SS_Debris_Body")))
                    {
                        var surface = RelativeState.getSurfaceMovement(Position.HeavenlyBodies.SunStation, child);
                        bodies.Add(Tuple.Create(child, RelativeState.fromSurface(Position.HeavenlyBodies.SunStation, surface)));
                        continue;
                    }
                }
                if (probeCannon != null)
                {
                    if (child.GetOrigParentBody() == probeCannon
                        && (name.StartsWith("Debris_Body")
                            || name.StartsWith("FakeCannonMuzzle_Body")))
                    {
                        var surface = RelativeState.getSurfaceMovement(Position.HeavenlyBodies.ProbeCannon, child);
                        bodies.Add(Tuple.Create(child, RelativeState.fromSurface(Position.HeavenlyBodies.ProbeCannon, surface)));
                        continue;
                    }
                }
                if (giantDeep != null)
                {
                    if (child.GetOrigParentBody() == giantDeep
                        && (name.StartsWith("GabbroShip_Body")
                            || name.StartsWith("StatueIsland_Body")
                            || name.StartsWith("ConstructionYardIsland_Body")
                            || name.StartsWith("GabbroIsland_Body")
                            || name.StartsWith("QuantumIsland_Body")
                            || name.StartsWith("BrambleIsland_Body")))
                    {
                        bodies.Add(captureState(child, Position.HeavenlyBodies.GiantsDeep));
                        continue;
                    }
                }
                if (whiteHole != null)
                {
                    if (child.GetOrigParentBody() == whiteHole
                        && (name.StartsWith("WhiteholeStationSuperstructure_Body")))
                    {
                        bodies.Add(captureState(child, Position.HeavenlyBodies.WhiteHoleStation));
                        continue;
                    }
                }

                if (!ignorables.Contains(child))
                {
                    bodies.Add(captureState(child));
                }
            }

            return bodies;
        }

        private static void relocateMovingItems(Dictionary<Position.HeavenlyBodies, AbsoluteState> newStates, List<Tuple<OWRigidbody, RelativeState>> movingItems)
        {

            foreach (var movingItem in movingItems)
            {
                if (movingItem == null || movingItem.Item1 == null || movingItem.Item2 == null)
                {
                    continue;
                }

                var parentState = !newStates.ContainsKey(movingItem.Item2.parent)
                    ? AbsoluteState.fromCurrentState(movingItem.Item2.parent)
                    : newStates[movingItem.Item2.parent];
                var parentGravity = Position.getGravity(movingItem.Item2.parent);
                if (parentState == null || parentGravity == null)
                {
                    continue;
                }
                movingItem.Item2.apply(movingItem.Item1, parentState, parentGravity);
            }
        }

        private static Tuple<OWRigidbody, RelativeState> captureState(OWRigidbody item, Position.HeavenlyBodies parent)
        {
            if (item == null)
            {
                return null;
            }

            return Tuple.Create(item, RelativeState.fromGlobal(parent, item));
        }

        private static Tuple<OWRigidbody, RelativeState> captureState(OWRigidbody item)
        {
            if (item == null)
            {
                return null;
            }

            return Tuple.Create(item, RelativeState.fromClosetInfluence(item, Position.HeavenlyBodies.Sun,
                Position.HeavenlyBodies.Player,
                Position.HeavenlyBodies.Probe,
                Position.HeavenlyBodies.Ship,
                Position.HeavenlyBodies.ModelShip,
                Position.HeavenlyBodies.NomaiProbe,
                Position.HeavenlyBodies.NomaiBrittleHollowShuttle,
                Position.HeavenlyBodies.NomaiEmberTwinShuttle,
                Position.HeavenlyBodies.TimberHearthProbe,
                Position.HeavenlyBodies.EyeOfTheUniverse,
                Position.HeavenlyBodies.EyeOfTheUniverse_Vessel));
        }

        private static Gravity getGravity(Position.HeavenlyBodies parent)
        {
            if (parent == Position.HeavenlyBodies.HourglassTwins)
            {
                var emberTwin = _mapping[Position.HeavenlyBodies.EmberTwin];
                var ashTwin = _mapping[Position.HeavenlyBodies.AshTwin];
                var exponent = (emberTwin.gravity.exponent + ashTwin.gravity.exponent) / 2f;
                var mass = (emberTwin.gravity.mass + ashTwin.gravity.mass) / 4f;

                return Gravity.of(exponent, mass);
            }
            else if (_mapping.ContainsKey(parent))
            {

                var parentMap = _mapping[parent];
                return Gravity.of(parentMap.gravity.exponent, parentMap.gravity.mass);
            }

            return null;
        }

        private static AbsoluteState updatePlanet(Position.HeavenlyBodies body, Dictionary<Position.HeavenlyBodies, AbsoluteState> newStates)
        {
            var owBody = Position.getBody(body);
            if (owBody == null || !_mapping.ContainsKey(body))
            {
                return null;
            }
            var planet = _mapping[body];

            updatePlanetGravity(planet, owBody);
            if (body == Position.HeavenlyBodies.QuantumMoon)
            {
                return null;
            }
            updatePlanetParent(planet.state.parent, owBody);

            var gravity = getGravity(planet.state.parent);
            AbsoluteState parentState = null;
            if (newStates.ContainsKey(planet.state.parent))
            {
                parentState = newStates[planet.state.parent];
            };
            return updatePlanetPosition(parentState, gravity, planet.state, owBody);
        }

        private static void updatePlanetGravity(Plantoid planet, OWRigidbody owBody)
        {
            var gravityVolumne = owBody?.GetAttachedGravityVolume();
            if (gravityVolumne != null)
            {
                var _upperSurfaceRadius = gravityVolumne.GetValue<float>("_upperSurfaceRadius");
                var _surfaceAcceleration = (GravityVolume.GRAVITATIONAL_CONSTANT * planet.gravity.mass) / Mathf.Pow(_upperSurfaceRadius, planet.gravity.exponent);

                gravityVolumne.SetValue("_falloffExponent", planet.gravity.exponent);
                gravityVolumne.SetValue("_gravitationalMass", planet.gravity.mass);
                gravityVolumne.SetValue("_surfaceAcceleration", _surfaceAcceleration);
            }
            owBody.SetMass(planet.gravity.mass);
        }

        private static void updatePlanetParent(Position.HeavenlyBodies parent, OWRigidbody owBody)
        {

            var owParent = Position.getBody(parent);
            if (owParent != null)
            {
                if (owParent.transform != null)
                {
                    if (owBody?.transform != null)
                    {
                        owBody.transform.parent = owParent.transform;
                    }
                    owBody.SetValue("_origParent", owParent.transform);
                    owBody.SetValue("_origParentBody", owParent);
                }
            }
            else if (parent == Position.HeavenlyBodies.None)
            {
                if (owBody?.transform != null)
                {
                    owBody.transform.parent = null;
                }
                owBody.SetValue("_origParent", null);
                owBody.SetValue("_origParentBody", null);
            }
        }

        private static AbsoluteState updatePlanetPosition(AbsoluteState parentState, Gravity gravity, RelativeState relativeState, OWRigidbody owBody)
        {
            return relativeState.apply(owBody, parentState, gravity);
        }

        private static bool onOrbitLineUpdate(ref OrbitLine __instance)
        {
            var _astroObject = __instance.GetValue<AstroObject>("_astroObject");
            var _lineRenderer = __instance.GetValue<LineRenderer>("_lineRenderer");
            _lineRenderer.startColor = Color.clear;
            _lineRenderer.endColor = Color.clear;

            AstroObject parentAstro = _astroObject != null ? _astroObject.GetPrimaryBody() : (AstroObject)null;
            if (parentAstro == null)
            {
                return false;
            }

            var body = Position.find(_astroObject);
            Plantoid planet;
            if (!_mapping.TryGetValue(body, out planet))
            {
                return false;
            }

            var parent = planet.state.parent;
            var owBody = Position.getBody(body);
            var kepler = Position.getKepler(parent, owBody);
            if (kepler == null && !kepler.isOrbit())
            {
                return false;
            }

            var _numVerts = __instance.GetValue<int>("_numVerts");
            var _verts = new Vector3[_numVerts];

            var parentGravity = Position.getGravity(parent);
            var semiAxis = new Vector2(kepler.semiMajorRadius, kepler.semiMinorRadius);
            var angle = KeplerCoordinates.shiftTimeSincePeriapsis(parentGravity, kepler, Time.timeSinceLevelLoad).esccentricAnomaly;
            var increment = Circle.getPercentageAngle(1f / (float)(_numVerts - 1));
            for (int index = 0; index < _numVerts; ++index)
            {
                var vert = Ellipse.fromPolar((angle + 180) - (index * increment), semiAxis);
                _verts[index] = new Vector3(vert.y, 0, vert.x);
            }
            _lineRenderer.SetPositions(_verts);

            var periapsis = OrbitHelper.getPeriapsis(parentGravity, kepler);
            var semiMinorDecending = OrbitHelper.getSemiMinorDecending(parentGravity, kepler);
            var _semiMajorAxis = periapsis.Item1.normalized * kepler.semiMajorRadius;
            var _semiMinorAxis = semiMinorDecending.Item1.normalized * kepler.semiMinorRadius;
            var _upAxisDir = Vector3.Cross(periapsis.Item1, semiMinorDecending.Item1);

            Vector3 foci = parentAstro.transform.position - periapsis.Item1.normalized * kepler.foci;

            __instance.transform.position = foci;
            __instance.transform.rotation = Quaternion.LookRotation(foci - parentAstro.transform.position, _upAxisDir);

            var _lineWidth = __instance.GetValue<float>("_lineWidth");
            var _maxLineWidth = __instance.GetValue<float>("_maxLineWidth");
            var _fade = __instance.GetValue<bool>("_fade");
            var _fadeStartDist = __instance.GetValue<float>("_fadeStartDist");
            var _fadeEndDist = __instance.GetValue<float>("_fadeEndDist");
            var _color = __instance.GetValue<Color>("_color");

            float ellipticalOrbitLine = DistanceToEllipticalOrbitLine(foci, _semiMajorAxis, _semiMinorAxis, _upAxisDir, Locator.GetActiveCamera().transform.position);
            float num1 = Mathf.Min(ellipticalOrbitLine * (_lineWidth / 1000f), _maxLineWidth);
            float num2 = _fade ? 1f - Mathf.Clamp01((ellipticalOrbitLine - _fadeStartDist) / (_fadeEndDist - _fadeStartDist)) : 1f;
            _lineRenderer.widthMultiplier = num1;
            _lineRenderer.startColor = new Color(_color.r, _color.g, _color.b, num2 * num2);

            return false;
        }

        private static float CalcProjectedAngleToCenter(Vector3 foci, Vector3 semiMajorAxis, Vector3 semiMinorAxis, Vector3 point)
        {
            Vector3 lhs = point - foci;
            Vector3 vector3 = new Vector3(Vector3.Dot(lhs, semiMajorAxis.normalized), 0.0f, Vector3.Dot(lhs, semiMinorAxis.normalized));
            vector3.x *= semiMinorAxis.magnitude / semiMajorAxis.magnitude;
            return (float)Math.Atan2(vector3.z, vector3.x);
        }

        private static float DistanceToEllipticalOrbitLine(Vector3 foci, Vector3 semiMajorAxis, Vector3 semiMinorAxis, Vector3 upAxis, Vector3 point)
        {
            float center = CalcProjectedAngleToCenter(foci, semiMajorAxis, semiMinorAxis, point);
            Vector3 b = foci + semiMajorAxis * Mathf.Cos(center) + semiMinorAxis * Mathf.Sin(center);
            return Vector3.Distance(point, b);
        }

        private static void onOWRigidbodyAwake(ref OWRigidbody __instance)
        {
            var body = Position.find(__instance);
            if (_mapping.ContainsKey(body))
            {
                update = true;
            }
        }

        private static bool onInitialMotionStart(ref InitialMotion __instance)
        {
            var owBody = __instance.GetValue<OWRigidbody>("_satelliteBody");
            var body = Position.find(owBody);
            if (_mapping.ContainsKey(body))
            {
                update = true;
            }

            return true;
        }

        private static bool onInitialVelocityStart(ref InitialVelocity __instance)
        {
            var owBody = __instance.GetValue<OWRigidbody>("_owRigidbody");
            var body = Position.find(owBody);
            if (_mapping.ContainsKey(body))
            {
                update = true;
            }

            return true;
        }

        private static bool onMatchInitialMotionStart(ref MatchInitialMotion __instance)
        {
            var owBody = __instance.GetValue<OWRigidbody>("_owRigidbody");
            var body = Position.find(owBody);
            if (_mapping.ContainsKey(body))
            {
                update = true;
            }

            return true;
        }

        private static bool onKinematicRigidbodyMove(ref KinematicRigidbody __instance, ref Vector3 position, ref Quaternion rotation)
        {
            var owBody = __instance.GetValue<Rigidbody>("_rigidbody");

            owBody.MovePosition(position);
            owBody.MoveRotation(rotation.normalized);

            return false;
        }
    }
}
